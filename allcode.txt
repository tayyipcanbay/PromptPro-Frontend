Path : src/App.js

import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import WelcomePage from './pages/WelcomePage'; // Assuming WelcomePage.js is in the same directory
import LoginPage from './pages/LoginPage'; // Assuming LoginPage.js is in the same directory
import Ask from './pages/Ask';
import './App.css';

function App() {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<WelcomePage />} />
        <Route path="/login" element={<LoginPage />} />
        <Route path='/ask' element={<Ask />} />
      </Routes>
    </Router>
  );
}

export default App;

Path : src/index.js

import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

Path : src/pages/Ask.js

import React, { useState } from 'react';
import { useLocation } from 'react-router-dom';
import axios from 'axios';

import './css/Ask.css';

const Ask = () => {
    const location = useLocation();

    const host = 'https://tayyipcanbay.pythonanywhere.com';
    // const host = 'http://localhost:5000';

    const [token, ] = useState(location.state.token);
    const [email, ] = useState(location.state.email);
    const [input, setInput] = useState('');
    const [file, setFile] = useState(null);
    const [messages, setMessages] = useState([
        { text: 'Hello, how can I help you?', type: 'received' }
    ]);
    const [isDragging, setIsDragging] = useState(false);
    const [errorMessage, setErrorMessage] = useState('');

    const handleDragOver = (e) => {
        e.preventDefault();
        setIsDragging(true);
    };

    const handleDragLeave = (e) => {
        e.preventDefault();
        setIsDragging(false);
    };

    const handleDrop = (e) => {
        e.preventDefault();
        const droppedFile = e.dataTransfer.files[0];
        setIsDragging(false);
        let droppedFileMessage = { text: `Uploaded file: ${droppedFile.name}`, type: 'received', file: droppedFile };
        if (e.dataTransfer.items) {
            for (var i = 0; i < e.dataTransfer.items.length; i++) {
                if (e.dataTransfer.items[i].kind === 'file') {
                    var file = e.dataTransfer.items[i].getAsFile();
                    setFile(file);
                    setMessages([...messages, droppedFileMessage]);
                }
            }
        }
    };

    const handleSend = async () => {
        try {
            setErrorMessage('');
            let message;
            const loadingMessage = { text: 'Let me think...', type: 'received' };
            setMessages([...messages, loadingMessage]);

            if (file) {
                const formData = new FormData();
                formData.append('file', file);
                formData.append('email', email);
                formData.append('token', token);
                formData.append('text', input);
                const response = await axios.post(`${host}/ask-file`, formData, {
                    headers: {
                        'Content-Type': 'multipart/form-data'
                    }
                });
                message = typeof response.data === 'object' ? response.data.text : response.data;
                setMessages(prevMessages => prevMessages.filter(msg => msg !== loadingMessage).concat([{ text: input, type: 'sent', file: file }, { text: message, type: 'received' }]));
            } else {
                const response = await axios.post(`${host}/ask-text`, { text: input, email, token });
                message = typeof response.data === 'object' ? response.data.text : response.data;
                setMessages(prevMessages => prevMessages.filter(msg => msg !== loadingMessage).concat([{ text: input, type: 'sent' }, { text: message, type: 'received' }]));
            }
            setInput('');
            setFile(null);
        } catch (error) {
            setErrorMessage(`${error.message} - Please chech your quota and try again later.`);
            console.error(error);
        }
    };

    const handleKeyPress = (e) => {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            handleSend();
        }
    };

    return (
        <div className={`ask-body ${isDragging ? 'dragging' : ''}`} onDragOver={handleDragOver} onDrop={handleDrop} onDragLeave={handleDragLeave}>
            <div className={`${isDragging ? 'dragging-alert' : 'non-dragging-alert'}`}>
                <h1>Drop file here</h1>
            </div>
            {errorMessage && <div className="error-message">{errorMessage}</div>}
            <div id="messages">
                {messages.map((message, index) => (
                    <div key={index} className='message'>
                        <div className={message.type}>
                            {message.file && <div className='asd'><img src={URL.createObjectURL(message.file)} alt={message.file.name} style={{ maxWidth: '100%', height: 'auto' }} /></div>}
                            {message.text}
                        </div>
                    </div>
                ))}
            </div>
            <div id="chat-input">
                <input type="text" value={input} onChange={(e) => setInput(e.target.value)} onKeyPress={handleKeyPress} />
                <button id='send-btn' onClick={handleSend}>Send</button>
            </div>
        </div>
    );
};

export default Ask;


Path : src/pages/LoginPage.js

import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';

import './css/LoginPage.css';

const LoginPage = () => {
  const [email, setEmail] = useState('');
  const [token, setToken] = useState('');
  const [errorMessage, setErrorMessage] = useState('');
  const navigate = useNavigate();

  const host = 'https://tayyipcanbay.pythonanywhere.com';
  // const host = 'http://localhost:5000';

  useEffect(() => {
    const savedEmail = localStorage.getItem('email');
    const savedToken = localStorage.getItem('token');

    if (savedEmail && savedToken) {
      navigate('/ask', { state: { email: savedEmail, token: savedToken } });
    }
  }, [navigate]);

  const handleInputChange = (event) => {
    if (event.target.name === 'email') {
      setEmail(event.target.value);
    } else if (event.target.name === 'token') {
      setToken(event.target.value);
    }
  };

  const handleSubmit = async (event) => {
    event.preventDefault();
    setErrorMessage('');  // Clear any previous error message

    try {
      const response = await axios.post(`${host}/login`, { email, token });

      if (response.status === 200) {
        localStorage.setItem('email', email);
        localStorage.setItem('token', token);
        navigate('/ask', { state: { email, token } });
      } else if (response.status === 401) {
        setErrorMessage('Login failed. Please check your credentials and try again.');
      } else if (response.status === 500) {
        setErrorMessage('An error occurred on the server. Please try again later.');
      } else {
        setErrorMessage('An unknown error occurred. Please try again later.');
      }
    } catch (error) {
      setErrorMessage('Login failed. Please check your credentials and try again.');
      console.error(error);
    }
  };

  return (
    <div className="animated-background login-page">
      <form onSubmit={handleSubmit}>
        {errorMessage && <div className="error-message">{errorMessage}</div>}
        <label>
          Email:
          <input type="email" name="email" value={email} onChange={handleInputChange} />
        </label>
        <label>
          Token:
          <input type="password" name="token" value={token} onChange={handleInputChange} />
        </label>
        <button type="submit">Login</button>
      </form>
    </div>
  );
};

export default LoginPage;

Path : src/pages/WelcomePage.js

import React from 'react';
import './css/WelcomePage.css';
import { useNavigate } from 'react-router-dom';


function WelcomePage() {
    const navigate = useNavigate();
    return (
        <div className='animated-background'>
            <div className='welcome-body'>
                <h1 className="bouncing-text">Welcome to our website!</h1>
                <p className="bouncing-text">We're glad to have you here. Enjoy your stay!</p>
                <div className="welcome-button-container">
                    <button className="button" onClick={() => navigate('/login')}>Login</button>

                </div>
            </div>
        </div>
    );
}

export default WelcomePage;




